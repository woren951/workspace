version: '3.5'

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 182.16.238.0/24
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 182.16.239.0/24
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 182.16.240.0/24

volumes:
  mysql:
    driver: local
  redis:
    driver: local
  phpmyadmin:
    driver: local
  elasticsearch:
    driver: local

services:
### MySQL ################################################
    mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      command: --max_allowed_packet=32505856
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${MYSQL_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        # logs
        - ./.logs/mysql:/var/log/mysql
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend

### PostgreSQL ###########################################
    postgres:
      build:
        context: ./postgres
        args:
          - POSTGRES_VERSION=${POSTGRES_VERSION}
      volumes:
        - ./.data/postgres:/var/lib/postgresql/data
        - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      networks:
        - backend

### PhpMyAdmin ###########################################
    phpmyadmin:
      build: ./phpmyadmin
      environment:
        - PMA_ARBITRARY=1
        - MYSQL_USER=${PMA_USER}
        - MYSQL_PASSWORD=${PMA_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
        - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
        - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
        - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
      ports:
        - "${PMA_PORT}:80"
      depends_on:
        - mysql
      networks:
        - frontend
        - backend

### Redis ################################################
    redis:
      build: ./redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend

### Redis Cluster ##########################################
    redis-cluster:
      build: ./redis-cluster
      ports:
        - "${REDIS_CLUSTER_PORT_RANGE}:7000-7005"
      networks:
        - backend

### REDISWEBUI ################################################
    redis-webui:
      build:
        context: ./redis-webui
      environment:
        - ADMIN_USER=${REDIS_WEBUI_USERNAME}
        - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
        - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
        - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
      networks:
        - backend
      ports:
        - "${REDIS_WEBUI_PORT}:80"
      depends_on:
        - redis

### ElasticSearch ########################################
    elasticsearch-7:
      build:
        context: ./elasticsearch
        args:
          - ELK_VERSION=7.5.1
      volumes:
        - '${DATA_PATH_HOST}/elasticsearch-7:/usr/share/elasticsearch/data'
      environment:
        - cluster.name=web-cluster
        - node.name=web-node
        - bootstrap.memory_lock=true
        - xpack.security.enabled=false
        - cluster.initial_master_nodes=web-node
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536
      ports:
        - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
        - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
      networks:
        - frontend
        - backend

    elasticsearch-6:
      build:
        context: ./elasticsearch
        args:
          - ELK_VERSION=6.8.10
      volumes:
        - '${DATA_PATH_HOST}/elasticsearch-6:/usr/share/elasticsearch/data'
      environment:
        - transport.host=127.0.0.1
        - cluster.name=web-cluster
        - xpack.security.enabled=false
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536
      ports:
        - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
        - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
      networks:
        - frontend
        - backend

### Kibana ##############################################
    kibana-7:
      build:
        context: ./kibana
        args:
          - ELK_VERSION=7.5.1
          - ELK_HOST=elasticsearch-7
          - KIBANA_HOST=kibana-7
      ports:
        - "${KIBANA_HTTP_PORT}:5601"
      volumes:
        # logs
        - ./.logs/nginx:/var/log/nginx
        - ./.logs/mysql:/var/log/mysql
      environment:
        ELASTICSEARCH_HOSTS: http://elasticsearch-7:9200
      depends_on:
        - elasticsearch-7
      networks:
        - frontend
        - backend

    kibana-6:
      build:
        context: ./kibana
        args:
          - ELK_VERSION=6.8.10
          - ELK_HOST=elasticsearch-6
          - KIBANA_HOST=kibana-6
      ports:
        - "${KIBANA_HTTP_PORT}:5601"
      volumes:
        # logs
        - ./.logs/nginx:/var/log/nginx
        - ./.logs/mysql:/var/log/mysql
      environment:
        ELASTICSEARCH_HOSTS: http://elasticsearch-6:9200
      depends_on:
        - elasticsearch-6
      networks:
        - frontend
        - backend

### Workspace ##############################################
    workspace:
      build:
        context: ./workspace
      volumes:
        - ${APP_CODE_PATH_HOST}:/var/www${APP_CODE_CONTAINER_FLAG}
        - ${HOME}/.ssh:/home/web/.ssh
        - ${HOME}/.ssh:/root/.ssh
        - ${LOCALHTTPS_PATH}:${LOCALHTTPS_PATH}
        - ./workspace/nginx/sites:/etc/nginx/sites-available
        - .bash-history/.zsh_history:/home/web/.zsh_history
        - .bash-history/.bash_history:/home/web/.bash_history
        # vscode-server
        - ./.vscode-server/extensions:/home/web/.vscode-server/extensions
        # logs
        - ./.logs/nginx:/var/log/nginx
        - ./.logs/mysql:/var/log/mysql
      ports:
        - "80:80"
        - "443:443"
      networks:
        - frontend
        - backend
