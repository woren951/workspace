version: "3.8"

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 182.16.240.0/24

volumes:
  vscode-extensions:
  elasticsearch-6-data:
  elasticsearch-7-data:
  elasticsearch-8-data:
  mariadb-11-data:
  minio-config:
  minio-data:
  mongo-config:
  mongo-data:
  mongo-webui-data:
  mysql-8-data:
  pgadmin-data:
  postgres-data:
  redis-data:

services:
  mariadb-11:
    build:
      context: ./mariadb
      args:
        MARIADB_VERSION: 11
    volumes:
      - mariadb-11-data:/var/lib/mysql
      - ./mariadb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./.logs/mariadb-11:/var/log/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${SERVICES_TIMEZONE}

  mysql-8:
    build:
      context: ./mysql
      args:
        MYSQL_VERSION: 8.0.43
    command: --max_allowed_packet=32505856
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${SERVICES_TIMEZONE}
    volumes:
      - mysql-8-data:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./.logs/mysql-8:/var/log/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    depends_on:
      - phpmyadmin

  phpmyadmin:
    build: ./phpmyadmin
    environment:
      PMA_HOSTS: mysql-8,mariadb
      MYSQL_USER: ${PMA_USER}
      MYSQL_PASSWORD: ${PMA_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${PMA_ROOT_PASSWORD}
      MAX_EXECUTION_TIME: ${PMA_MAX_EXECUTION_TIME}
      MEMORY_LIMIT: ${PMA_MEMORY_LIMIT}
      UPLOAD_LIMIT: ${PMA_UPLOAD_LIMIT}
    ports:
      - "${PMA_PORT}:80"

  mongo:
    build: ./mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    ports:
      - "${MONGO_PORT}:27017"
    depends_on:
      - mongo-webui

  mongo-webui:
    build:
      context: ./mongo-webui
    environment:
      ROOT_URL: ${MONGO_WEBUI_ROOT_URL}
      MONGO_URL: ${MONGO_WEBUI_MONGO_URL}
      MONGO_WEBUI_INSTALL_MONGO: "false"
    volumes:
      - mongo-webui-data:/data/db
    ports:
      - "${MONGO_WEBUI_PORT}:3000"

  postgres:
    build:
      context: ./postgres
      args:
        POSTGRES_VERSION: ${POSTGRES_VERSION}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    depends_on:
      - pgadmin

  pgadmin:
    build:
      context: ./pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  redis:
    build: ./redis
    volumes:
      - redis-data:/data
    ports:
      - "${REDIS_PORT}:6379"

  redis-webui:
    build:
      context: ./redis-webui
    environment:
      ADMIN_USER: ${REDIS_WEBUI_USERNAME}
      ADMIN_PASS: ${REDIS_WEBUI_PASSWORD}
      REDIS_1_HOST: ${REDIS_WEBUI_CONNECT_HOST}
      REDIS_1_PORT: ${REDIS_WEBUI_CONNECT_PORT}
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis

  elasticsearch-8:
    build:
      context: ./elasticsearch
      args:
        ELK_VERSION: 8.19.4
    volumes:
      - elasticsearch-8-data:/usr/share/elasticsearch/data
    environment:
      node.name: web-node
      cluster.name: web-cluster
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      xpack.security.http.ssl.enabled: "false"
      xpack.security.transport.ssl.enabled: "false"
      xpack.ml.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
      cluster.initial_master_nodes: web-node
      ingest.geoip.downloader.enabled: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"

  elasticsearch-7:
    build:
      context: ./elasticsearch
      args:
        ELK_VERSION: 7.17.28
    volumes:
      - elasticsearch-7-data:/usr/share/elasticsearch/data
    environment:
      node.name: web-node
      cluster.name: web-cluster
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      xpack.security.http.ssl.enabled: "false"
      xpack.security.transport.ssl.enabled: "false"
      xpack.ml.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
      cluster.initial_master_nodes: web-node
      ingest.geoip.downloader.enabled: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"

  elasticsearch-6:
    build:
      context: ./elasticsearch
      args:
        ELK_VERSION: 6.8.23
    volumes:
      - elasticsearch-6-data:/usr/share/elasticsearch/data
    environment:
      node.name: web-node
      cluster.name: web-cluster
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      xpack.security.http.ssl.enabled: "false"
      xpack.security.transport.ssl.enabled: "false"
      xpack.ml.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
      cluster.initial_master_nodes: web-node
      ingest.geoip.downloader.enabled: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"

  kibana-8:
    build:
      context: ./kibana
      args:
        ELK_VERSION: 8.19.4
        ELK_HOST: elasticsearch-8
        KIBANA_HOST: kibana-8
        TZ: ${SERVICES_TIMEZONE}
    ports:
      - "${KIBANA_HTTP_PORT}:5601"
    volumes:
      - ./.logs/nginx:/var/log/nginx
      - ./.logs/mysql-8:/var/log/mysql-8
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch-8:9200
    depends_on:
      - elasticsearch-8

  kibana-7:
    build:
      context: ./kibana
      args:
        ELK_VERSION: 7.17.28
        ELK_HOST: elasticsearch-7
        KIBANA_HOST: kibana-7
        TZ: ${SERVICES_TIMEZONE}
    ports:
      - "${KIBANA_HTTP_PORT}:5601"
    volumes:
      - ./.logs/nginx:/var/log/nginx
      - ./.logs/mysql-8:/var/log/mysql-8
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch-7:9200
    depends_on:
      - elasticsearch-7

  kibana-6:
    build:
      context: ./kibana
      args:
        ELK_VERSION: 6.8.23
        ELK_HOST: elasticsearch-6
        KIBANA_HOST: kibana-6
        TZ: ${SERVICES_TIMEZONE}
    ports:
      - "${KIBANA_HTTP_PORT}:5601"
    volumes:
      - ./.logs/nginx:/var/log/nginx
      - ./.logs/mysql-8:/var/log/mysql-8
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch-6:9200
    depends_on:
      - elasticsearch-6

  minio:
    build:
      context: ./minio
    volumes:
      - minio-data:/export
      - minio-config:/root/.minio
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

  workspace:
    build:
      context: ./workspace
      args:
        GIT_GLOBAL_USER_NAME: ${GIT_GLOBAL_USER_NAME}
        GIT_GLOBAL_USER_EMAIL: ${GIT_GLOBAL_USER_EMAIL}
    tty: true
    privileged: true
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www${APP_CODE_CONTAINER_FLAG}
      - .vscode-server:/home/web/.vscode-server
      - ./workspace/sites-available:/etc/nginx/sites-available
      - ./workspace/certs:/etc/nginx/certs
      - .bash-history/root:/root/.bash-history
      - .bash-history/web:/home/web/.bash-history
      - .logs/nginx:/var/log/nginx
      - .logs/php-fpm:/var/log/php-fpm
    tmpfs:
      - /run
      - /run/lock
    networks:
      default:
        ipv4_address: 182.16.240.24
    ports:
      - "80:80"
      - "443:443"
      - "2222:22"
      - "3010:3010"
      - "8080:8080"
